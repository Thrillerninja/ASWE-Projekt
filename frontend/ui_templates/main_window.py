# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './ui_templates/main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.bt_exit = QtWidgets.QPushButton(self.centralwidget)
        self.bt_exit.setGeometry(QtCore.QRect(710, 40, 81, 51))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.bt_exit.setFont(font)
        self.bt_exit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.bt_exit.setStyleSheet("/* General Exit Button Style */\n"
"QPushButton {\n"
"    background-color: #e74c3c;    /* Red background for the button */\n"
"    color: white;                 /* White text color */\n"
"    border: 2px solid #c0392b;    /* Darker red border */\n"
"    border-radius: 8px;           /* Rounded corners for the button */\n"
"    padding: 10px 20px;           /* Padding inside the button */\n"
"    font-size: 16px;              /* Font size for the button text */\n"
"    font-weight: bold;            /* Bold text for emphasis */\n"
"    text-align: center;           /* Center the text inside the button */\n"
"}\n"
"\n"
"/* Hover State */\n"
"QPushButton:hover {\n"
"    background-color: #c0392b;    /* Darker red background on hover */\n"
"    border: 2px solid #a93226;    /* Even darker red border on hover */\n"
"    color: #ecf0f1;               /* Light text color on hover */\n"
"}\n"
"\n"
"/* Pressed State */\n"
"QPushButton:pressed {\n"
"    background-color: #a93226;    /* Even darker red background when pressed */\n"
"    border: 2px solid #922b21;    /* Dark border when pressed */\n"
"    color: #bdc3c7;               /* Grey text color when pressed */\n"
"}\n"
"\n"
"/* Disabled State */\n"
"QPushButton:disabled {\n"
"    background-color: #bdc3c7;    /* Light grey background when disabled */\n"
"    border: 2px solid #95a5a6;    /* Grey border when disabled */\n"
"    color: #7f8c8d;               /* Grey text color when disabled */\n"
"}\n"
"")
        self.bt_exit.setObjectName("bt_exit")
        self.rb_diesel = QtWidgets.QRadioButton(self.centralwidget)
        self.rb_diesel.setEnabled(True)
        self.rb_diesel.setGeometry(QtCore.QRect(40, 50, 121, 31))
        self.rb_diesel.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.rb_diesel.setStyleSheet("/* General Radio Button Style */\n"
"QRadioButton {\n"
"    spacing: 8px;                /* Space between the radio button and its label */\n"
"    font-size: 14px;             /* Font size for the label */\n"
"    color: #2c3e50;              /* Label text color */\n"
"}\n"
"\n"
"/* Radio Button Indicator (the circle) */\n"
"QRadioButton::indicator {\n"
"    width: 16px;                 /* Size of the indicator */\n"
"    height: 16px;\n"
"    border-radius: 8px;          /* Makes the indicator perfectly circular */\n"
"    border: 2px solid #2980b9;   /* Blue border for the indicator */\n"
"    background-color: #ecf0f1;   /* Light grey background when unchecked */\n"
"}\n"
"\n"
"/* Checked State */\n"
"QRadioButton::indicator:checked {\n"
"    background-color: #3498db;   /* Blue background when checked */\n"
"    border: 2px solid #2980b9;   /* Darker blue border when checked */\n"
"}\n"
"\n"
"/* Disabled State */\n"
"QRadioButton::indicator:disabled {\n"
"    background-color: #ecf0f1;   /* Light grey background when disabled */\n"
"    border: 2px solid #95a5a6;   /* Grey border when disabled */\n"
"}\n"
"\n"
"/* Checked and Disabled State */\n"
"QRadioButton::indicator:checked:disabled {\n"
"    background-color: #95a5a6;   /* Darker grey background when checked and disabled */\n"
"    border: 2px solid #7f8c8d;   /* Even darker grey border when checked and disabled */\n"
"}")
        self.rb_diesel.setChecked(True)
        self.rb_diesel.setObjectName("rb_diesel")
        self.rb_e10 = QtWidgets.QRadioButton(self.centralwidget)
        self.rb_e10.setGeometry(QtCore.QRect(40, 110, 121, 31))
        self.rb_e10.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.rb_e10.setStyleSheet("/* General Radio Button Style */\n"
"QRadioButton {\n"
"    spacing: 8px;                /* Space between the radio button and its label */\n"
"    font-size: 14px;             /* Font size for the label */\n"
"    color: #2c3e50;              /* Label text color */\n"
"}\n"
"\n"
"/* Radio Button Indicator (the circle) */\n"
"QRadioButton::indicator {\n"
"    width: 16px;                 /* Size of the indicator */\n"
"    height: 16px;\n"
"    border-radius: 8px;          /* Makes the indicator perfectly circular */\n"
"    border: 2px solid #2980b9;   /* Blue border for the indicator */\n"
"    background-color: #ecf0f1;   /* Light grey background when unchecked */\n"
"}\n"
"\n"
"/* Checked State */\n"
"QRadioButton::indicator:checked {\n"
"    background-color: #3498db;   /* Blue background when checked */\n"
"    border: 2px solid #2980b9;   /* Darker blue border when checked */\n"
"}\n"
"\n"
"/* Disabled State */\n"
"QRadioButton::indicator:disabled {\n"
"    background-color: #ecf0f1;   /* Light grey background when disabled */\n"
"    border: 2px solid #95a5a6;   /* Grey border when disabled */\n"
"}\n"
"\n"
"/* Checked and Disabled State */\n"
"QRadioButton::indicator:checked:disabled {\n"
"    background-color: #95a5a6;   /* Darker grey background when checked and disabled */\n"
"    border: 2px solid #7f8c8d;   /* Even darker grey border when checked and disabled */\n"
"}")
        self.rb_e10.setObjectName("rb_e10")
        self.rb_benzin = QtWidgets.QRadioButton(self.centralwidget)
        self.rb_benzin.setEnabled(True)
        self.rb_benzin.setGeometry(QtCore.QRect(40, 80, 121, 31))
        self.rb_benzin.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.rb_benzin.setStyleSheet("/* General Radio Button Style */\n"
"QRadioButton {\n"
"    spacing: 8px;                /* Space between the radio button and its label */\n"
"    font-size: 14px;             /* Font size for the label */\n"
"    color: #2c3e50;              /* Label text color */\n"
"}\n"
"\n"
"/* Radio Button Indicator (the circle) */\n"
"QRadioButton::indicator {\n"
"    width: 16px;                 /* Size of the indicator */\n"
"    height: 16px;\n"
"    border-radius: 8px;          /* Makes the indicator perfectly circular */\n"
"    border: 2px solid #2980b9;   /* Blue border for the indicator */\n"
"    background-color: #ecf0f1;   /* Light grey background when unchecked */\n"
"}\n"
"\n"
"/* Checked State */\n"
"QRadioButton::indicator:checked {\n"
"    background-color: #3498db;   /* Blue background when checked */\n"
"    border: 2px solid #2980b9;   /* Darker blue border when checked */\n"
"}\n"
"\n"
"/* Disabled State */\n"
"QRadioButton::indicator:disabled {\n"
"    background-color: #ecf0f1;   /* Light grey background when disabled */\n"
"    border: 2px solid #95a5a6;   /* Grey border when disabled */\n"
"}\n"
"\n"
"/* Checked and Disabled State */\n"
"QRadioButton::indicator:checked:disabled {\n"
"    background-color: #95a5a6;   /* Darker grey background when checked and disabled */\n"
"    border: 2px solid #7f8c8d;   /* Even darker grey border when checked and disabled */\n"
"}")
        self.rb_benzin.setChecked(False)
        self.rb_benzin.setObjectName("rb_benzin")
        self.lb_select_fuel_type = QtWidgets.QLabel(self.centralwidget)
        self.lb_select_fuel_type.setGeometry(QtCore.QRect(20, 20, 161, 31))
        self.lb_select_fuel_type.setStyleSheet("/* General Label Style */\n"
"QLabel {\n"
"    font-size: 18px;             /* Base font size for regular labels */\n"
"    font-weight: bold;          /* Bold text for emphasis */\n"
"    color: #3498db; ;              /* Dark grey text color */\n"
"    padding: 4px;               /* Padding around the text */\n"
"    border: 1px solid transparent; /* Optional border for spacing */\n"
"}\n"
"\n"
"/* Prominent Headline Style */\n"
"QLabel.headline {\n"
"    font-size: 24px;            /* Larger font size for prominent headlines */\n"
"    font-weight: bold;          /* Bold text for emphasis */\n"
"    color: #3498db;             /* Distinct blue color for headlines */\n"
"    padding: 8px;               /* Increased padding for a more spacious look */\n"
"    border: none;               /* No border for a cleaner look */\n"
"    background-color: #f0f8ff;  /* Light blue background to make the headline stand out */\n"
"    border-radius: 4px;         /* Slightly rounded corners for a modern appearance */\n"
"    margin-bottom: 12px;        /* Space below the headline to separate from other elements */\n"
"}\n"
"\n"
"/* Subheadline Style */\n"
"QLabel.subheadline {\n"
"    font-size: 18px;            /* Slightly smaller than headlines */\n"
"    font-weight: bold;          /* Bold text for emphasis */\n"
"    color: #2c3e50;             /* Dark grey color for subheadlines */\n"
"    padding: 6px;               /* Padding around the text */\n"
"    border: none;               /* No border for a cleaner look */\n"
"    margin-bottom: 8px;         /* Space below the subheadline */\n"
"}\n"
"\n"
"/* Disabled Label Style */\n"
"QLabel:disabled {\n"
"    color: #7f8c8d;             /* Grey text color for disabled state */\n"
"}\n"
"")
        self.lb_select_fuel_type.setObjectName("lb_select_fuel_type")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.bt_exit.setText(_translate("MainWindow", "Exit"))
        self.rb_diesel.setText(_translate("MainWindow", "Diesel"))
        self.rb_e10.setText(_translate("MainWindow", "E10"))
        self.rb_benzin.setText(_translate("MainWindow", "Benzin"))
        self.lb_select_fuel_type.setText(_translate("MainWindow", "Select Fuel Type"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
